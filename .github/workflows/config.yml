name: Hahow Design CI/CD
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        npm ci
        npm run build --if-present
        npm test
      env:
        CI: true
    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Release
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          # TODO: GitHub Packages Registry
          # registry-url: https://npm.pkg.github.com/
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  deploy-storybook:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Deploy Storybook to GitHub Page
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Deploy to GitHub Page
        run: npm run deploy-storybook -- --ci
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
